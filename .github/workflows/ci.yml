name: CI

on:
  push:
    branches:
      - "master"
      - "maintenance/.+"
  pull_request:
    branches:
      - "master"
      - "maintenance/.+"
  schedule:
    # Run a cron job once daily, weekdays only
    - cron: "0 3 * * 1-5"

jobs:
  test:
    name: Pytest
    runs-on: ${{ matrix.cfg.os }}
    strategy:
      fail-fast: false
      matrix:
        cfg:
          - os: ubuntu-latest
            python-version: "3.6"
          - os: ubuntu-latest
            python-version: "3.7"
          - os: ubuntu-latest
            python-version: "3.8"
          - os: ubuntu-latest
            python-version: "3.9"
          - os: macos-latest
            python-version: "3.6"
          - os: windows-latest
            python-version: "3.6"

    env:
      PYVER: ${{ matrix.cfg.python-version }}
      PACKAGE: teachopencadd

    steps:
      - uses: actions/checkout@v2

      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.cfg.python-version }}
          activate-environment: teachopencadd
          channel-priority: true
          environment-file: devtools/conda-envs/test_env.yml
          auto-activate-base: false

      - name: Ensure we have the right python
        shell: bash -l {0}
        run: |
          echo "Installed Python: $(python --version)"
          echo "Expected: ${{ matrix.cfg.python-version }}"
          python --version | grep "Python ${{ matrix.cfg.python-version }}"

      - name: Additional info about the build
        shell: bash
        run: |
          uname -a
          df -h
          ulimit -a

      - name: Install package
        shell: bash -l {0}
        run: |
          pip install . --no-deps -vv

      - name: Environment Information
        shell: bash -l {0}
        run: |
          conda info --all
          conda list

      - name: Test CLI
        shell: bash -l {0}
        run: |
          teachopencadd

      - name: Run tests
        shell: bash -l {0}
        run: |
          PYTEST_ARGS="--nbval-lax --current-env --dist loadscope --numprocesses 2"
          # Test the same notebooks as treebeard does
          NOTEBOOKS=$(cat treebeard.yaml | shyaml get-values notebooks | tr -d '\r' | xargs)
          pytest $PYTEST_ARGS $NOTEBOOKS

  format:
    name: Black
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - name: Install format dependencies
        run: python -m pip install black-nb shyaml
      - name: Run black-nb
        run: |
          NOTEBOOKS=$(cat treebeard.yaml | shyaml get-values notebooks | xargs)
          black-nb -l 99 --check $NOTEBOOKS

  readmes:
    name: READMEs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - name: Install nbformat
        run: python -m pip install nbformat shyaml
      - name: Check READMEs are up-to-date
        run: |
          NOTEBOOKS=$(cat treebeard.yaml | shyaml get-values notebooks | xargs)
          for path in $NOTEBOOKS; do
            python devtools/regenerate_readmes.py --output README.md $path
          done
          # If the script above introduced changes (it shouldn't!), git diff will have output and an error code
          git diff --exit-code


  treebeard:
    name: Treebeard
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: treebeardtech/treebeard@master
        with:
          api-key: ${{ secrets.TREEBEARD_API_KEY }}
          docker-username: "jaimergp"
          docker-password: "${{ secrets.DOCKERHUB_PASSWORD }}"
          docker-image-name: "volkamerlab/teachopencadd"

  condabuild:
    name: Conda package
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Fetch all tags
        shell: bash
        run: |
          git fetch --tags --force

      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: 3.6
          channel-priority: true
          auto-activate-base: true
          channels: conda-forge,defaults

      - name: Additional info about the build
        shell: bash
        run: |
          uname -a
          df -h
          ulimit -a

      - name: Environment Information
        shell: bash -l {0}
        run: |
          conda info --all
          conda list

      - name: Build package
        shell: bash -l {0}
        run: |
          conda install conda-build anaconda
          conda build devtools/conda-recipe
